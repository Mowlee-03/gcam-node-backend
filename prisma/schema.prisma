// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum GlobalRole {
  SUPERADMIN
  USER
}

enum OrgRole {
  ADMIN
  USER
}

model User {
  id              Int             @id @default(autoincrement())
  fullname        String
  username        String          @unique
  password        String
  mobile          String          @unique
  role            GlobalRole      @default(USER)
  created_at      DateTime        @default(now())

  organization    UserOrganization[]
  device_access   UserDevice[]
}

model Organization {
  id              Int               @id @default(autoincrement())
  name            String
  created_at      DateTime          @default(now())

  users           UserOrganization[]
  sites           Site[]
  devices         Device[]
}

model UserOrganization {
  id              Int                 @id @default(autoincrement())
  user_id         Int
  organization_id Int
  role            OrgRole             @default(USER)

  user            User                @relation(fields: [user_id],references: [id],onDelete: Cascade,onUpdate: Cascade)
  organization    Organization        @relation(fields: [organization_id],references: [id],onDelete: Cascade,onUpdate: Cascade)

  @@unique([user_id,organization_id])
}

model Site {
  id              Int                 @id @default(autoincrement())
  name            String
  location        Json
  organization_id Int
  created_at      DateTime            @default(now())

  organization    Organization        @relation(fields: [organization_id],references: [id],onDelete: Cascade ,onUpdate: Cascade)
  devices         Device[]
}


model InstalledDevice {
  id              Int                 @id @default(autoincrement())
  imei            String              @unique
  video_url       String
  is_installed    Boolean             @default(true)
  is_registered   Boolean             @default(false)
  created_at      DateTime            @default(now())
  updated_at      DateTime            @updatedAt
}


model Device {
  id              Int                 @id @default(autoincrement())
  imei            String              @unique
  video_url       String
  name            String?
  location        Json?
  site_id         Int?
  organization_id Int?
  max_count       Int?
  created_at      DateTime            @default(now())

  users           UserDevice[]
  garbagelog      GarbageLog[]
  personlog       PersonLog[]
  latestlog       LatestLog?
  site            Site?                @relation(fields: [site_id],references: [id],onDelete: SetNull,onUpdate: Cascade)
  organization    Organization?          @relation(fields: [organization_id],references: [id],onDelete: SetNull,onUpdate: Cascade)
}

model UserDevice {
  id              Int                 @id @default(autoincrement())
  user_id         Int
  device_id       Int
  user            User                @relation(fields: [user_id],references: [id],onDelete: Cascade,onUpdate: Cascade)
  device          Device              @relation(fields: [device_id],references: [id],onDelete: Cascade,onUpdate: Cascade)

  @@unique([user_id,device_id])
}


model GarbageLog {
  id                Int                 @id @default(autoincrement())
  device_id         Int
  imei              String
  organization_name String
  site_name         String
  date              DateTime
  image             String
  box_count         Int
  
  device            Device              @relation(fields: [device_id],references: [id])
  created_at        DateTime            @default(now())

  @@index([device_id])
  @@index([date])
}

model PersonLog {
  id                Int                 @id @default(autoincrement())
  device_id         Int
  imei              String
  organization_name String
  site_name         String
  date              DateTime
  image             String

  device            Device              @relation(fields: [device_id],references: [id])
  created_at        DateTime            @default(now())

  @@index([device_id])
  @@index([date])
}

model LatestLog {
  id                Int                  @id @default(autoincrement())
  device_id         Int                  @unique
  imei              String
  organization_name String
  site_name         String
  garbage_image     String
  person_image      String
  garbage_date      DateTime
  person_date       DateTime
  update_at         DateTime             @updatedAt
  created_at        DateTime             @default(now())

  device            Device               @relation(fields: [device_id],references: [id])
}

model Missedlog {
  id                Int                  @id  @default(autoincrement())
  data              Json
  problem           String
  created_at        DateTime             @default(now())
  is_verified       Boolean              @default(false)
  updated_at        DateTime             @updatedAt
}